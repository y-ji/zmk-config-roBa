#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        nobashi {
            bindings = <&kp MINUS>;
            key-positions = <1 2>;
        };

        TMClogin {
            bindings = <&login>;
            key-positions = <16 17 18>;
        };

        ANTlogin {
            bindings = <&ant>;
            key-positions = <28 29 30>;
        };

        back {
            bindings = <&kp LA(LEFT_ARROW)>;
            key-positions = <18 19 20>;
        };

        fwd {
            bindings = <&kp LA(RIGHT_ARROW)>;
            key-positions = <19 20 21>;
        };

        CAD {
            bindings = <&kp LC(LA(DELETE))>;
            key-positions = <16 17 18 19>;
        };

        L_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        R_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        L_bra {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
        };

        R_bra {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32>;
        };

        L_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <6 7>;
        };

        R_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 8>;
        };

        centerA {
            bindings = <&centerA>;
            key-positions = <18 19 20>;
        };

        centerB {
            bindings = <&centerB>;
            key-positions = <30 31 32>;
        };

        centerC {
            bindings = <&centerC>;
            key-positions = <6 7 8>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1 2>;
        };

        BT0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <9 0>;
        };

        BT1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <10 21>;
        };

        BT2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <22 33>;
        };

        BT3 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <34 42>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        login: login {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N1 &kp N7 &kp EXCL &kp LS(Q) &kp LS(A) &kp LS(Z) &kp N2 &kp W &kp S &kp X>;
            label = "LOGIN";
        };

        ant: ant {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N8 &kp U &kp E &kp S &kp MINUS &kp A &kp J &kp AT &kp N0 &kp N9 &kp N0 &kp N9>;
            label = "ANT";
        };

        centerA: centerA {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LPAR &kp RPAR &kp LEFT_ARROW>;
            label = "CENTERA";
        };

        centerB: centerB {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LBKT &kp RBKT &kp LEFT_ARROW>;
            label = "CENTERB";
        };

        centerC: centerC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LEFT_BRACE &kp RBRC &kp LEFT_ARROW>;
            label = "CENTERC";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                        &kp T                                                          &kp Y         &kp U  &lt 5 I                 &kp O    &kp P
&kp A             &kp S         &kp D         &lt 5 F                      &kp G        &kp LEFT_SHIFT                     &kp MINUS      &kp H         &kp J  &lt 5 K                 &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B        &kp COLON                          &kp SEMICOLON  &kp N         &kp M  &lt_to_layer_0 5 COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 6 INT_HENKAN  &lt 2 SPACE  &lt_to_layer_0 3 INT_MUHENKAN      &kp BACKSPACE  &lt 1 DELETE                                          &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4  &kp F5                       &trans  &trans          &kp UP_ARROW    &trans           &trans
&kp F6   &kp F7   &kp F8   &kp F9  &kp F10  &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp F11  &kp F12  &kp F13  &trans  &trans   &trans      &trans  &trans  &kp HOME        &trans          &kp END          &trans
&trans   &trans   &trans   &trans  &trans   &trans      &trans  &trans                                                   &trans
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &mkp MB1  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans    &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans    &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
