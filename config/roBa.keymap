#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define SNIPE 3
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        nobashi {
            bindings = <&kp MINUS>;
            key-positions = <1 2>;
        };

        TMClogin {
            bindings = <&login>;
            key-positions = <16 17 18>;
        };

        proxyLogin {
            bindings = <&proxyLogin>;
            key-positions = <28 29 30>;
        };

        centerL {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <18 19>;
            layers = <2>;
        };

        centerR {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            layers = <2>;
        };

        centerBoth {
            bindings = <&center>;
            key-positions = <18 19 20>;
            layers = <2>;
        };

        downL {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
            layers = <2>;
        };

        downR {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 32>;
            layers = <2>;
        };

        downBoth {
            bindings = <&down>;
            key-positions = <30 31 32>;
            layers = <2>;
        };

        upL {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <7 6>;
            layers = <2>;
        };

        upR {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 8>;
            layers = <2>;
        };

        upBoth {
            bindings = <&up>;
            key-positions = <6 7 8>;
            layers = <2>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        leftClick {
            bindings = <&mkp LCLK>;
            key-positions = <18 19>;
            layers = <0>;
        };

        rightClick {
            bindings = <&mkp RCLK>;
            key-positions = <19 20>;
            layers = <0>;
        };

        middleClick {
            bindings = <&mkp MCLK>;
            key-positions = <18 7>;
            layers = <0>;
        };

        winTab {
            bindings = <&kp LG(TAB)>;
            key-positions = <30 31 32>;
            layers = <5>;
        };

        close {
            bindings = <&kp LC(W)>;
            key-positions = <18 20>;
            layers = <5>;
        };

        openMail {
            bindings = <&kp LC(Q)>;
            key-positions = <31 30>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        login: login {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N7 &kp EXCL &kp LS(Q) &kp LS(A) &kp LS(Z) &kp N2 &kp W &kp S &kp X &kp ENTER>;
            label = "LOGIN";
        };

        ant: ant {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N8 &kp U &kp E &kp S &kp MINUS &kp A &kp J &kp AT &kp N0 &kp N9 &kp N0 &kp N9>;
            label = "ANT";
        };

        proxyLogin: proxyLogin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp N0 &kp N4 &kp N6 &kp N3 &kp T &kp R &kp N6 &kp ENTER>;
            label = "PROXYLOGIN";
        };

        center: centerA {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR>;
            label = "CENTERA";
        };

        down: down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RIGHT_BRACKET>;
            label = "DOWN";
        };

        up: up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RBRC>;
            label = "UP";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R             &kp T                                               &kp Y         &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F             &kp G        &kp LEFT_SHIFT          &kp MINUS      &kp H         &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V             &kp B        &lt 3 COLON             &kp SEMICOLON  &kp N         &kp M  &kp COMMA  &kp DOT  &lt 5 SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 INT_HENKAN  &lt 2 SPACE  &lt 6 INT_MUHENKAN      &kp BACKSPACE  &lt 4 DELETE                             &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5                      &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans   &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans   &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH   &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &kp EQUAL       &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp PLUS   &kp ASTERISK          &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                &kp PIPE
            >;
        };

        SNIPE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans     &trans     &trans              &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp LA(J)  &kp LA(K)  &kp LA(L)           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp LA(M)  &trans     &kp LC(LA(DELETE))  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                            &trans
            >;
        };

        SCROLL {
            bindings = <
&kp N1          &kp N2  &kp N3  &kp N4  &kp N5                                                 &kp N6                   &kp N7          &kp N8          &kp N9           &kp N0
&trans          &trans  &trans  &trans  &trans  &kp C_VOLUME_UP        &kp LG(DOWN_ARROW)      &kp LG(UP_ARROW)         &kp HOME        &kp UP_ARROW    &kp END          &kp LG(TAB)
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &kp C_VOLUME_DOWN      &kp LG(LS(LEFT_ARROW))  &kp LS(LG(RIGHT_ARROW))  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans          &trans  &trans  &trans  &trans  &trans                 &kp LA(LEFT_ARROW)      &kp LA(RIGHT_ARROW)                                                       &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
